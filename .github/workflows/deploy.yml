name: Deploy to cloud run

on:
  push:
    branches:
      - main
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  deploy:
    permissions:
       contents: "write"
       id-token: "write"
    name: Upload image and deploy cloud run
    runs-on: ubuntu-latest
    steps:
      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v1.1.1
        with:
          versionSpec: '5.x'

      - name: Checkout code
        uses: actions/checkout@v4
        with:
          persist-credentials: false
          fetch-depth: 0
      
      - name: Determine Version
        id: gitversion
        uses: gittools/actions/gitversion/execute@v1.1.1
        with:
          useConfigFile: true
          configFilePath: GitVersion.yml

      - name: Authenticate to Google Cloud
        id: auth
        uses: google-github-actions/auth@v2
        with:
          token_format: access_token
          workload_identity_provider: ${{ vars.GCP_WIF_PROVIDER }}
          service_account: ${{ vars.SERVICE_ACCOUNT }}

      - name: Login to Registry
        uses: docker/login-action@v3
        with:
          registry: europe-west1-docker.pkg.dev
          username: oauth2accesstoken
          password: ${{ steps.auth.outputs.access_token }}

      - name: Build and upload image to Artifact Registry
        run: |
          docker build -f Dockerfile \
            -t europe-west1-docker.pkg.dev/${{ vars.GCP_PROJECT_ID }}/codegen/analytical-assistant:v${{ steps.gitversion.outputs.fullSemVer }} . \
            --build-arg GAR_ACCESS_TOKEN=${{ steps.auth.outputs.access_token }}
          docker push europe-west1-docker.pkg.dev/${{ vars.GCP_PROJECT_ID }}/codegen/analytical-assistant:v${{ steps.gitversion.outputs.fullSemVer }}
      
      - name: Deploy cloud run
        id: deploy
        run: |
          gcloud run services update segment --region europe-west1 \
            --image europe-west1-docker.pkg.dev/${{ vars.GCP_PROJECT_ID }}/codegen/analytical-assistant:v${{ steps.gitversion.outputs.fullSemVer }}

      - name: Create release
        run: gh release create v${{ steps.gitversion.outputs.fullSemVer }}
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
